##################
### custom key ###
##################

# [Session]
# create session
bind s command-prompt -p "New Session:" "new-session -A -s '%%' -n ''"
bind -n M-m new-session
bind -n M-M command-prompt -p "New Session:" "new-session -A -s '%%' -n ''"
# list sessions, panes and windows
bind / choose-tree
bind -n M-/ choose-tree
bind -n M-? choose-tree -s
# rename session
bind . command-prompt -I "#{session_name}" "rename-session '%%'"
bind -n M-. command-prompt -I "#{session_name}" "rename-session '%%'"
# switch session
bind [ switch-client -p
bind ] switch-client -n
bind -n M-[ switch-client -p
bind -n M-] switch-client -n
bind -n M-J switch-client -p
bind -n M-K switch-client -n

# [Window]
# create window
bind n new-window -a -c '#{pane_current_path}' -n ''
bind N new-window -b -c '#{pane_current_path}' -n ''
bind -n M-n new-window -a -c '#{pane_current_path}' -n ''
bind -n M-N new-window -b -c '#{pane_current_path}' -n ''
bind c command-prompt -p "Name of new window:" "new-window -a -c '#{pane_current_path}' -n '%%'"
# rename window
bind -n M-, command-prompt -I "#{window_name}" "rename-window '%%'"
# switch windows
bind -n M-j \
    if-shell -F '#{e|>:#I,1}' \
        previous-window
bind -n M-k \
    if-shell -F '#{e|<:#I,#{session_windows}}' \
        next-window
# swap windows
bind -n M-H \
    if-shell -F '#{e|>:#I,1}' \
        'swap-window -d -t -1'
bind -n M-L \
    if-shell -F '#{e|<:#I,#{session_windows}}' \
        'swap-window -d -t +1'
# select windows
bind -n M-0 select-window -t :=0
bind -n M-1 select-window -t :=1
bind -n M-2 select-window -t :=2
bind -n M-3 select-window -t :=3
bind -n M-4 select-window -t :=4
bind -n M-5 select-window -t :=5
bind -n M-6 select-window -t :=6
bind -n M-7 select-window -t :=7
bind -n M-8 select-window -t :=8
bind -n M-9 select-window -t :=9

# [Pane]
# split panes using | and -
unbind '"'
unbind %
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -b -v -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind | split-window -b -h -c "#{pane_current_path}"
bind -n M-- split-window -v -c "#{pane_current_path}" \; select-layout even-vertical
bind -n M-_ split-window -b -v -c "#{pane_current_path}" \; select-layout even-vertical
bind -n M-\\ split-window -h -c "#{pane_current_path}" \; select-layout even-horizontal
bind -n M-| split-window -b -h -c "#{pane_current_path}" \; select-layout even-horizontal
# zoom panes
unbind z
bind -N "Maximize active pane (replace z)" m resize-pane -Z 
bind -N "Maximize active pane (replace z)" C-m resize-pane -Z
# resize panes
bind -r h resize-pane -L 2
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 2
# swap panes
bind -r H swap-pane -D
bind -r J swap-pane -D
bind -r K swap-pane -U
bind -r L swap-pane -U
# quit pane
bind -n M-d confirm-before -y -p "kill current pane ([Y]/n)? " kill-pane

# [Jumping]
# toggle between two windows
bind -n M-\; last-pane
# remove these prevent unintended swap panes
unbind C-h
unbind C-j
unbind C-k
unbind C-l

# [Editing]
# <prefix>-l to clear screen
bind l send-keys C-l
# enter copy mode
bind Enter copy-mode
# y to copy visual selected text
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# Q to toggle rectangle selection mode
bind -T copy-mode-vi Q send-keys -X rectangle-toggle

# [Copy Mode]
# clear some defaults
unbind-key -T copy-mode-vi Space
# <prefix> Space to enter and exit copy-mode
bind-key -T prefix Space copy-mode
bind-key -T copy-mode-vi Space send-keys -X cancel
# <prefix> v begin selection
bind-key -T copy-mode-vi v send-keys -X begin-selection

# [vim-tmux-navigator]
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
